org: ruchikpravasi
app: aws-node-http-api-project
service: aws-node-http-api-project
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:145612666382:table/TaskTable
functions:
  addTask:
    handler: src/addTodo.handler
    events:
      - httpApi:
          path: /addTask
          method: post
  getTasks:
    handler: src/fetchTodo.handler
    events:
      - httpApi:
          path: /list
          method: get
  getTaskByID:
    handler: src/fetchTodoByID.handler
    events:
      - httpApi:
          path: /list/{id}
          method: get
  editTask:
    handler: src/editTodo.handler
    events:
      - httpApi:
          path: /edit
          method: post
  deleteTask:
    handler: src/deleteTodo.handler
    events:
      - httpApi:
          path: /delete/{id}
          method: delete

resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: task
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
          KeySchema:
            - AttributeName: user_id
              AttributeType: S

plugins:
  - serverless-offline
